{"version":3,"sources":["Resume_2019_L.pdf","ParticleComponent.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","params","App","props","state","visible","this","setState","contactClass","className","ParticleComponent","Button","variant","onClick","showSocial","bind","rel","href","target","Pdf","Component","Boolean","window","location","hostname","match","ReactDOM","render","basename","process","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"sFAAAA,EAAOC,QAAU,IAA0B,2C,mPCG5B,oBACf,kBAAC,IAAD,CACIC,OAAQ,CACP,UAAa,CACT,OAAU,CACN,MAAS,IACT,QAAW,CACP,QAAU,IAGlB,KAAQ,CACJ,MAAS,EACT,QAAU,EACV,KAAQ,CACJ,MAAS,EACT,SAAY,KAGpB,YAAe,CACX,QAAU,GAEd,KAAQ,CACJ,QAAU,EACV,MAAS,EACT,UAAa,MACb,SAAY,QAGpB,cAAiB,CACb,OAAU,CACN,QAAW,CACP,QAAU,EACV,KAAQ,UAEZ,QAAW,CACP,QAAU,EACV,KAAQ,YAGhB,MAAS,CACL,OAAU,CACN,SAAY,IACZ,SAAY,EACZ,KAAQ,EACR,QAAW,GAEf,QAAW,CACP,SAAY,IACZ,SAAY,S,wCCDdC,E,YAvCb,WAAYC,GAAQ,IAAD,8BACjB,4CAAMA,KAEDC,MAAQ,CACXC,SAAS,GAJM,E,0EASjBC,KAAKC,SAAS,CAACF,SAAUC,KAAKF,MAAMC,Y,+BAIpC,IAAMG,EAAeF,KAAKF,MAAMC,QAAU,cAAgB,mBAE1D,OACA,yBAAKI,UAAU,OACb,yBAAKA,UAAU,YAAW,kBAACC,EAAD,OAE1B,4BAAQD,UAAU,UAClB,wCAGA,yBAAKA,UAAU,cACf,6BACA,mDACA,kBAACE,EAAA,EAAD,CAAQC,QAAQ,gBAAgBC,QAASP,KAAKQ,WAAWC,KAAKT,MAAOG,UAAU,YAA/E,iBACA,6BACA,6BACE,uBAAGA,UAAWD,EAAcQ,IAAI,sBAAsBC,KAAK,kDAAkDC,OAAO,UAAS,kBAAC,IAAD,OAC7H,uBAAGT,UAAWD,EAAcQ,IAAI,sBAAsBC,KAAK,6BAA6BC,OAAO,UAAS,kBAAC,IAAD,OACxG,uBAAGT,UAAWD,EAAcQ,IAAI,sBAAsBC,KAAME,IAAKD,OAAO,UAAS,kBAAC,IAAD,OACjF,uBAAGT,UAAWD,EAAcQ,IAAI,sBAAsBC,KAAM,gCAAgC,kBAAC,IAAD,c,GAjClFG,aCEEC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,YCXNC,IAASC,OAAO,kBAAC,IAAD,CAAQC,SAAUC,sBAAwB,kBAAE,EAAF,OAAmBC,SAASC,eAAe,SD0H/F,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.2cced99a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Resume_2019_L.d96c85ea.pdf\";","import React from \"react\";\nimport Particles from \"react-particles-js\";\n\nexport default () => (\n<Particles\n    params={{\n\t    \"particles\": {\n\t        \"number\": {\n\t            \"value\": 160,\n\t            \"density\": {\n\t                \"enable\": false\n\t            }\n\t        },\n\t        \"size\": {\n\t            \"value\": 3,\n\t            \"random\": true,\n\t            \"anim\": {\n\t                \"speed\": 4,\n\t                \"size_min\": 0.3\n\t            }\n\t        },\n\t        \"line_linked\": {\n\t            \"enable\": false\n\t        },\n\t        \"move\": {\n\t            \"random\": true,\n\t            \"speed\": 1,\n\t            \"direction\": \"top\",\n\t            \"out_mode\": \"out\"\n\t        }\n\t    },\n\t    \"interactivity\": {\n\t        \"events\": {\n\t            \"onhover\": {\n\t                \"enable\": true,\n\t                \"mode\": \"bubble\"\n\t            },\n\t            \"onclick\": {\n\t                \"enable\": true,\n\t                \"mode\": \"repulse\"\n\t            }\n\t        },\n\t        \"modes\": {\n\t            \"bubble\": {\n\t                \"distance\": 250,\n\t                \"duration\": 2,\n\t                \"size\": 0,\n\t                \"opacity\": 0\n\t            },\n\t            \"repulse\": {\n\t                \"distance\": 400,\n\t                \"duration\": 4\n\t            }\n\t        }\n\t    }\n\t}} />\n);\n","import React, { Component } from 'react';\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport Button from 'react-bootstrap/Button';\nimport './App.css';\nimport ParticleComponent from \"./ParticleComponent\";\nimport { FaLinkedinIn, FaGithub } from 'react-icons/fa';\nimport { IoIosPaper } from \"react-icons/io\";\nimport { MdEmail } from \"react-icons/md\";\nimport Pdf from '../src/Resume_2019_L.pdf';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      visible: false\n    }\n  }\n\n  showSocial () {\n    this.setState({visible: !this.state.visible});\n  }\n\n  render() {\n    const contactClass = this.state.visible ? 'contactIcon' : 'contactIcon hide'\n\n    return (    \n    <div className=\"App\">\n      <div className=\"particle\"><ParticleComponent /></div>\n\n      <header className=\"header\">\n      <h1>\n        Udall Mo\n      </h1>\n      <div className=\"lineStyle\"></div>\n      <br/>\n      <p>Full-Stack Developer</p>\n      <Button variant=\"outline-light\" onClick={this.showSocial.bind(this)} className=\"btnStyle\">Check me out!</Button>\n      <br/>\n      <div>\n        <a className={contactClass} rel=\"noopener noreferrer\" href='https://www.linkedin.com/in/udall-mo-a13b17127/' target='_blank'><FaLinkedinIn /></a>\n        <a className={contactClass} rel=\"noopener noreferrer\" href='https://github.com/udallmo' target='_blank'><FaGithub /></a>\n        <a className={contactClass} rel=\"noopener noreferrer\" href={Pdf} target=\"_blank\"><IoIosPaper /></a>\n        <a className={contactClass} rel=\"noopener noreferrer\" href={\"mailto: udall_mo@outlook.com\"}><MdEmail /></a>\n      </div>\n    </header>\n  </div>);\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter as Router } from 'react-router-dom';\n\nReactDOM.render(<Router basename={process.env.PUBLIC_URL}>< App /></Router>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}